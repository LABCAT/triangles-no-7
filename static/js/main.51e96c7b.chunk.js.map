{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","audio/triangles-no-7.ogg","audio/triangles-no-7.mid","js/classes/SpinningTriangle.js","js/classes/BackgroundTriangle.js","js/classes/SpinningTriangle2.js","js/classes/AnimatedGlyph.js","js/functions/ShuffleArray.js","js/classes/TriangleGlyph.js","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","_jsxs","id","className","xmlns","height","viewBox","width","children","_jsx","d","fill","SpinningTriangle","constructor","x","y","hue","this","p","maxWidth","rotation","clockwise","Math","random","update","draw","x1","cos","y1","sin","x2","y2","x3","y3","translate","rotate","strokeWeight","stroke","triangle","scale","BackgroundTriangle","SpinningTriangle2","innerWidth","ix1","iy1","ix2","iy2","ix3","iy3","cx","cy","AnimatedGlyph","startWidth","arguments","length","undefined","lifetime","direction","origin","createVector","lifeTime","startTime","millis","endTime","randY","randX","destination","clockwiseRotation","currentTime","min","dist","Vector","sub","mult","pos","add","ShuffleArray","array","temporaryValue","randomIndex","currentIndex","floor","TriangleGlyph","super","hueSet","hue1","hue2","hue3","hue4","color","drawTriangle","size","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","bpm","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","scheduleCueSet","noteSet2","noteSet3","noteSet4","document","getElementById","classList","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","i","note","ticks","time","addCue","setup","createCanvas","background","colorMode","HSB","rectMode","CENTER","angleMode","DEGREES","bgHue","bgOpacity","isPlaying","backgroundTriangles","spinningTriangles1","animatedGlyphs","glyph","lowerHue","upperHue","addSpinningTriangle","variation","map","minWidth","overlap","attempts","push","executeCueSet1","getBarAndBeat","includes","bar","beat","semiquaver","backgroundTrianglesNextSize","executeCueSet2","setTimeout","executeCueSet3","executeCueSet4","maxSize","duration","durationTicks","intervalPerTri","index","hasStarted","ticksPerBeat","ticksPerSemiquaver","totalBeats","mousePressed","pause","parseInt","buffer","reset","dataLayer","title","location","href","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.51e96c7b.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/triangles-no-7.685dae77.ogg\";","export default __webpack_public_path__ + \"static/media/triangles-no-7.a3f1c683.mid\";","export default class SpinningTriangle {\r\n    constructor(p5, x, y, width, hue) {\r\n        this.p = p5;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.hue = hue;\r\n        this.width = width / 4;\r\n        this.maxWidth = width;\r\n        this.rotation = 0;\r\n        this.clockwise = Math.random() > 0.5;\r\n    }\r\n\r\n    update() {\r\n        if (this.width < this.maxWidth) {\r\n            this.width = this.width + (Math.random() * 0.5);\r\n        }\r\n        if(this.clockwise) {\r\n            this.rotation++;\r\n        }\r\n        else {\r\n            this.rotation--;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        const x1 = this.width * this.p.cos(0);\r\n        const y1 = this.width * this.p.sin(0);\r\n        const x2 = this.width * this.p.cos(120); \r\n        const y2 = this.width * this.p.sin(120);\r\n        const x3 = this.width * this.p.cos(240);\r\n        const y3 = this.width * this.p.sin(240);\r\n\r\n        this.p.translate(this.x, this.y);\r\n        this.p.rotate(this.rotation);\r\n\r\n        // Draw the first triangle\r\n        this.p.strokeWeight(2);\r\n        this.p.stroke(this.hue, 0, 100);\r\n        this.p.fill(this.hue, 100, 100, 0.25);\r\n        this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n\r\n        this.p.scale(0.8);\r\n        this.p.stroke(this.hue, 100, 100);\r\n        this.p.fill(this.hue, 100, 25, 0.75);\r\n        this.p.triangle(0, 0, x2, y2, x3, y3);\r\n        this.p.fill(this.hue, 100, 50, 0.75);\r\n        this.p.triangle(x1, y1, 0, 0, x3, y3);\r\n        this.p.fill(this.hue, 100, 75, 0.75);\r\n        this.p.triangle(x1, y1, x2, y2, 0, 0);\r\n\r\n        this.p.scale(1.25);\r\n        this.p.rotate(-this.rotation);\r\n        this.p.translate(-this.x, -this.y);\r\n    }\r\n}\r\n","export default class BackgroundTriangle {\r\n    constructor(p5, x, y, width, hue) {\r\n        this.p = p5;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width / 16;\r\n        this.hue = hue;\r\n    }\r\n\r\n    update() {\r\n        this.width = this.width + 8;\r\n    }\r\n\r\n    draw() {\r\n        const x1 = this.width * this.p.cos(0);\r\n        const y1 = this.width * this.p.sin(0);\r\n        const x2 = this.width * this.p.cos(120); \r\n        const y2 = this.width * this.p.sin(120);\r\n        const x3 = this.width * this.p.cos(240);\r\n        const y3 = this.width * this.p.sin(240);\r\n\r\n        this.p.translate(this.x, this.y);\r\n        this.p.rotate(30);\r\n        this.p.stroke(this.hue, 0, 100);\r\n        this.p.strokeWeight(4);\r\n        this.p.fill(this.hue, 100, 100, 0.25);\r\n        this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n        this.p.rotate(-30);\r\n        this.p.translate(-this.x, -this.y);\r\n    }\r\n}","import SpinningTriangle from \"./SpinningTriangle.js\";\r\n\r\nexport default class SpinningTriangle2 extends SpinningTriangle {\r\n    draw() {\r\n        const x1 = this.width * this.p.cos(0);\r\n        const y1 = this.width * this.p.sin(0);\r\n        const x2 = this.width * this.p.cos(120); \r\n        const y2 = this.width * this.p.sin(120);\r\n        const x3 = this.width * this.p.cos(240);\r\n        const y3 = this.width * this.p.sin(240);\r\n\r\n        const innerWidth = this.width / 2; // Half the size of the outer triangle\r\n        const ix1 = innerWidth * this.p.cos(0);\r\n        const iy1 = innerWidth * this.p.sin(0);\r\n        const ix2 = innerWidth * this.p.cos(120);\r\n        const iy2 = innerWidth * this.p.sin(120);\r\n        const ix3 = innerWidth * this.p.cos(240);\r\n        const iy3 = innerWidth * this.p.sin(240);\r\n\r\n        this.p.translate(this.x, this.y);\r\n        this.p.rotate(this.rotation);\r\n\r\n        this.p.strokeWeight(2);\r\n        // Draw the first triangle\r\n        this.p.stroke(this.hue, 100, 70); \r\n        this.p.fill(this.hue, 100, 100, 0.25);\r\n        this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n\r\n        this.p.stroke(this.hue, 100, 100);\r\n\r\n        // Calculate the center of the triangle\r\n        const cx = (x1 + x2 + x3) / 3;\r\n        const cy = (y1 + y2 + y3) / 3;\r\n\r\n        // First small triangle\r\n        this.p.fill(this.hue, 100, 70, 0.5);\r\n        this.p.triangle(\r\n            x1, y1,\r\n            (x1 + cx) / 2, (y1 + cy) / 2,\r\n            (x2 + cx) / 2, (y2 + cy) / 2\r\n        );\r\n\r\n        // Second small triangle\r\n        this.p.fill(this.hue, 100, 60, 0.5);\r\n        this.p.triangle(\r\n            x2, y2,\r\n            (x2 + cx) / 2, (y2 + cy) / 2,\r\n            (x3 + cx) / 2, (y3 + cy) / 2\r\n        );\r\n\r\n        // Third small triangle\r\n        this.p.fill(this.hue, 100, 50, 0.5);\r\n        this.p.triangle(\r\n            x3, y3,\r\n            (x3 + cx) / 2, (y3 + cy) / 2,\r\n            (x1 + cx) / 2, (y1 + cy) / 2\r\n        );\r\n\r\n        // Draw the final triangle\r\n        this.p.stroke(this.hue, 0, 80); \r\n        this.p.fill(this.hue, 100, 80, 0.5); \r\n        this.p.triangle(ix1, iy1, ix2, iy2, ix3, iy3);\r\n\r\n        this.p.rotate(-this.rotation);\r\n        this.p.translate(-this.x, -this.y);\r\n    }\r\n}\r\n","export default class AnimatedGlyph {\r\n    constructor(p5, x, y, width, startWidth = 0, lifetime = 0, direction = '') {\r\n        this.p = p5;\r\n        this.hue = this.p.random(0, 360);\r\n        this.origin = this.p.createVector(x, y);\r\n        this.width = startWidth;\r\n        this.maxWidth = width;\r\n        this.rotation = 0;\r\n        this.lifeTime = lifetime ? lifetime : this.p.random(5000, 15000);\r\n        this.startTime = this.p.millis();\r\n        this.endTime = this.startTime + this.lifeTime;\r\n        \r\n        const randY =  this.p.random(0, this.p.height);\r\n        const randX =  this.p.random(0, this.p.width);\r\n        this.direction = direction ? direction : this.p.random(['left', 'right', 'up', 'down']);\r\n        switch (this.direction) {\r\n            case 'left':\r\n                this.destination = this.p.createVector(0, randY);\r\n                break;\r\n            case 'right':\r\n                this.destination = this.p.createVector(this.p.width, randY);\r\n                break;\r\n            case 'up':\r\n                this.destination = this.p.createVector(randX, 0);\r\n                break;\r\n            case 'down':\r\n                this.destination = this.p.createVector(randX, this.p.height);\r\n                break;\r\n        }\r\n\r\n        this.clockwiseRotation = Math.random() < 0.5;\r\n    }\r\n\r\n    update() {\r\n        if(this.width < this.maxWidth) {\r\n            this.width = this.width + (Math.random() / 4);\r\n        }\r\n        if(this.clockwiseRotation){\r\n            this.rotation++;\r\n        }\r\n        else {\r\n            this.rotation--;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        const x1 = 0 - (this.width/2),   \r\n            y1 = 0 + (this.width/2), \r\n            x2 = 0,\r\n            y2 = 0 - (this.width/2),\r\n            x3 = 0 + (this.width/2), \r\n            y3 = 0 + (this.width/2),\r\n            currentTime = this.p.millis();\r\n        if(currentTime < this.endTime){\r\n            const scale = this.p.min(1, (currentTime - this.startTime) / (this.endTime - this.startTime)),\r\n                dist = window.p5.Vector.sub(this.destination, this.origin).mult(scale),\r\n                pos = window.p5.Vector.add(this.origin, dist);\r\n            this.p.translate(pos.x, pos.y);\r\n            this.p.rotate(this.rotation);\r\n            this.p.strokeWeight(4);\r\n            this.p.stroke(this.hue, 100, 100);\r\n            this.p.fill(this.hue, 100, 100, 0.25);\r\n            this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n            this.p.rotate(-this.rotation);\r\n            this.p.translate(-pos.x, -pos.y);\r\n        }\r\n    }\r\n}","function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","import AnimatedGlyph from './AnimatedGlyph.js';\r\nimport ShuffleArray from '../functions/ShuffleArray.js';\r\n\r\nexport default class TriangleGlyph extends AnimatedGlyph {\r\n\r\n    constructor(p5, x, y, width, startWidth, lifetime) {\r\n        super(p5, x, y, width, startWidth, lifetime);\r\n        this.hueSet = ShuffleArray([30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360]);\r\n        this.hue1 = this.hueSet[0];\r\n        this.hue2 = this.hueSet[1];\r\n        this.hue3 = this.hueSet[2];\r\n        this.hue4 = this.hueSet[3];\r\n        this.stroke = p5.color(0, 0, 100);\r\n        this.endTime = this.startTime + this.lifeTime;\r\n    }\r\n\r\n    drawTriangle(size, hue) {\r\n        // Calculate vertices using polar coordinates\r\n        const x1 = size * this.p.cos(0);\r\n        const y1 = size * this.p.sin(0);\r\n        const x2 = size * this.p.cos(120);\r\n        const y2 = size * this.p.sin(120);\r\n        const x3 = size * this.p.cos(240);\r\n        const y3 = size * this.p.sin(240);\r\n\r\n        this.p.fill(hue, 100, 100, 0.5);\r\n        this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n    }\r\n\r\n    draw() {\r\n        const currentTime = this.p.millis();\r\n        if(currentTime < this.endTime){\r\n            const scale = this.p.min(1, (currentTime - this.startTime) / (this.endTime - this.startTime)),\r\n                dist = window.p5.Vector.sub(this.destination, this.origin).mult(scale),\r\n                pos = window.p5.Vector.add(this.origin, dist);\r\n\r\n            this.p.translate(pos.x, pos.y);\r\n            this.p.rotate(this.rotation);\r\n            this.p.strokeWeight(1);\r\n            \r\n            this.p.stroke(this.stroke);\r\n            this.drawTriangle(this.width, this.hue1);\r\n            this.drawTriangle(this.width / 2, this.hue2);\r\n            this.drawTriangle(this.width / 4, this.hue3);\r\n\r\n            this.p.rotate(-this.rotation);\r\n            this.p.translate(-pos.x, -pos.y);\r\n        }\r\n    }\r\n}","import React, { useRef, useEffect } from \"react\";\r\nimport \"./helpers/Globals\";\r\nimport \"p5/lib/addons/p5.sound\";\r\nimport * as p5 from \"p5\";\r\nimport { Midi } from '@tonejs/midi'\r\nimport PlayIcon from './functions/PlayIcon.js';\r\n\r\nimport audio from \"../audio/triangles-no-7.ogg\";\r\nimport midi from \"../audio/triangles-no-7.mid\";\r\nimport SpinningTriangle from \"./classes/SpinningTriangle.js\";\r\nimport BackgroundTriangle from \"./classes/BackgroundTriangle.js\";\r\nimport SpinningTriangle2 from \"./classes/SpinningTriangle2.js\";\r\nimport TriangleGlyph from \"./classes/TriangleGlyph.js\";\r\n\r\n/**\r\n * Glyphs No. 3\r\n */\r\nconst P5SketchWithAudio = () => {\r\n    const sketchRef = useRef();\r\n\r\n    const Sketch = p => {\r\n\r\n        p.canvas = null;\r\n\r\n        p.canvasWidth = window.innerWidth;\r\n\r\n        p.canvasHeight = window.innerHeight;\r\n\r\n        p.audioLoaded = false;\r\n\r\n        p.player = null;\r\n\r\n        p.PPQ = 3840 * 4;\r\n\r\n        p.bpm = 88;\r\n\r\n        p.loadMidi = () => {\r\n            Midi.fromUrl(midi).then(\r\n                function(result) {\r\n                    console.log(result);\r\n                    const noteSet1 = result.tracks[14].notes; // Combinator - Percussve Monks\r\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\r\n                    const noteSet2 = result.tracks[10].notes; // Wave Layers Edition - PPG Bass\r\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\r\n                    const noteSet3 = result.tracks[12].notes; // Combinator - Percussve Monks\r\n                    p.scheduleCueSet(noteSet3, 'executeCueSet3');\r\n                    const noteSet4 = result.tracks[7].notes; // Europa - Fifth Drops Poly\r\n                    p.scheduleCueSet(noteSet4, 'executeCueSet4');\r\n                    p.audioLoaded = true;\r\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\r\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\r\n                }\r\n            );\r\n            \r\n        }\r\n\r\n        p.preload = () => {\r\n            p.song = p.loadSound(audio, p.loadMidi);\r\n            p.song.onended(p.logCredits);\r\n        }\r\n\r\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\r\n            let lastTicks = -1,\r\n                currentCue = 1;\r\n            for (let i = 0; i < noteSet.length; i++) {\r\n                const note = noteSet[i],\r\n                    { ticks, time } = note;\r\n                if(ticks !== lastTicks || poly){\r\n                    note.currentCue = currentCue;\r\n                    p.song.addCue(time, p[callbackName], note);\r\n                    lastTicks = ticks;\r\n                    currentCue++;\r\n                }\r\n            }\r\n        } \r\n\r\n        p.setup = () => {\r\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\r\n            p.background(0);\r\n            p.colorMode(p.HSB);\r\n            p.rectMode(p.CENTER);\r\n            p.angleMode(p.DEGREES);\r\n            p.bgHue = p.random(0, 360);\r\n        }\r\n\r\n        p.bgHue = 0;\r\n\r\n        p.bgOpacity = 0.9;\r\n\r\n        p.draw = () => {\r\n            if(p.audioLoaded && p.song.isPlaying()){\r\n                p.background(p.bgHue, 100, 50, p.bgOpacity);\r\n\r\n                for (let i = 0; i < p.backgroundTriangles.length; i++) {\r\n                    const triangle = p.backgroundTriangles[i];\r\n                    triangle.update();\r\n                    triangle.draw();\r\n                }\r\n\r\n                for (let i = 0; i < p.spinningTriangles1.length; i++) {\r\n                    const triangle = p.spinningTriangles1[i];\r\n                    triangle.update();\r\n                    triangle.draw();\r\n                }\r\n\r\n                for (let i = 0; i < p.animatedGlyphs.length; i++) {\r\n                    const glyph = p.animatedGlyphs[i];\r\n                    glyph.update();\r\n                    glyph.draw();\r\n                }\r\n            }\r\n        }\r\n\r\n        p.spinningTriangles1 = [];\r\n\r\n        p.lowerHue = 0;\r\n\r\n        p.upperHue = 360;\r\n\r\n        p.addSpinningTriangle = (note, variation = false) => {\r\n            let x = p.random(p.width / 24, p.width - p.width / 24);\r\n            let y = p.random(p.width / 24, p.height - p.width / 24);\r\n            let width = p.random(p.width / 32, p.width / 24);\r\n            let hue = p.map(note.midi, 12, 60, p.lowerHue, p.upperHue);\r\n\r\n            const minWidth = p.width / 64; \r\n            const maxAttempts = 10;\r\n\r\n            let overlap = true;\r\n            let attempts = 0;\r\n\r\n            while (overlap && attempts < maxAttempts) {\r\n                overlap = false;\r\n                // Check for overlap with existing triangles\r\n                for (let i = 0; i < p.spinningTriangles1.length; i++) {\r\n                    const triangle = p.spinningTriangles1[i];\r\n                    const dist = p.dist(x, y, triangle.x, triangle.y);\r\n                    if (dist < width * 1) { // If triangles are too close\r\n                        overlap = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (overlap) {\r\n                    width *= 0.9; // Decrease the size if overlap is detected\r\n                    x = p.random(p.width / 24, p.width - p.width / 24); // Try new X\r\n                    y = p.random(p.width / 24, p.height - p.width / 24); // Try new Y\r\n                    if (width < minWidth) break; // Exit the loop if the size is too small\r\n                }\r\n\r\n                attempts++;\r\n            }\r\n\r\n            if (!overlap) {\r\n                const className = variation ? SpinningTriangle2 : SpinningTriangle;\r\n                p.spinningTriangles1.push(\r\n                    new className(p, x, y, width, hue)\r\n                );\r\n            }\r\n        }\r\n\r\n        p.executeCueSet1 = (note) => {\r\n            const pos = p.getBarAndBeat(note.ticks)\r\n            if([1, 3, 4].includes(pos.bar) && pos.beat === 1 && pos.semiquaver === 1) {\r\n                p.bgHue = p.random(0, 360);\r\n                p.spinningTriangles1 = [];\r\n                p.lowerHue = p.random(0, 120);\r\n                p.upperHue = p.random(240, 360);\r\n            }\r\n\r\n            if(note.currentCue < 48) {\r\n                p.addSpinningTriangle(note);\r\n            }\r\n        }\r\n\r\n        p.backgroundTriangles = [];\r\n\r\n        p.backgroundTrianglesNextSize = undefined;\r\n\r\n        p.executeCueSet2 = (note) => {\r\n            let size = !p.backgroundTrianglesNextSize ? Math.min(p.width, p.height) : p.backgroundTrianglesNextSize;\r\n            p.backgroundTriangles.push(\r\n                new BackgroundTriangle(\r\n                    p,\r\n                    p.width / 2,\r\n                    p.height / 2,\r\n                    size,\r\n                    p.random(p.random(0, 60), p.random(300, 360))\r\n                )\r\n            );\r\n\r\n            if(note.currentCue > 4) {\r\n                for (let i = 1; i < 8; i++) {\r\n                    setTimeout(\r\n                        () => {\r\n                            size = size * 0.2;\r\n                            p.backgroundTriangles.push(\r\n                                new BackgroundTriangle(\r\n                                    p,\r\n                                    p.width / 2,\r\n                                    p.height / 2,\r\n                                    size,\r\n                                    p.random(p.random(0, 60), p.random(300, 360))\r\n                                )\r\n                            );\r\n                        }, \r\n                        200 * i\r\n                    );\r\n                }\r\n            }\r\n            console.log(note.currentCue);\r\n            \r\n\r\n            p.backgroundTrianglesNextSize = size * 0.9;\r\n        }\r\n\r\n        p.executeCueSet3 = (note) => {\r\n            const pos = p.getBarAndBeat(note.ticks)\r\n            \r\n            if([5, 7, 9, 13, 15, 17].includes(pos.bar) && pos.beat === 1 && pos.semiquaver === 1) {\r\n                p.bgHue = p.random(0, 360);\r\n                p.spinningTriangles1 = []; \r\n                p.lowerHue = p.random(0, 120);\r\n                p.upperHue = p.random(240, 360);\r\n            }\r\n            \r\n            if(note.currentCue <= 64 || note.currentCue > 224) {\r\n                p.addSpinningTriangle(note, true);\r\n            }\r\n        }\r\n\r\n        p.animatedGlyphs = [];\r\n\r\n        p.executeCueSet4 = (note) => {\r\n            const maxSize = p.width / 64;\r\n            const duration = (note.durationTicks * 60000) / (p.PPQ * p.bpm)\r\n            const triCount = 128;\r\n            const intervalPerTri = (duration * 0.68) / triCount;\r\n\r\n            for (let index = 0; index < triCount; index++) {\r\n                const x = p.width / 2;\r\n                const y = p.height / 2;\r\n                const size = p.random(p.width / 256, p.width / 128);\r\n                setTimeout(() => {\r\n                    p.animatedGlyphs.push(\r\n                        new TriangleGlyph(\r\n                            p, \r\n                            x, \r\n                            y, \r\n                            maxSize, \r\n                            size, \r\n                            duration\r\n                        )\r\n                    );\r\n                }, intervalPerTri * index);\r\n            }\r\n        }\r\n\r\n        p.hasStarted = false;\r\n\r\n        p.getBarAndBeat = (ticks) => {\r\n            const beatsPerBar = 4;\r\n            const ticksPerBeat = p.PPQ;\r\n            const ticksPerSemiquaver = ticksPerBeat / 4; // Semiquaver = 1/16th note\r\n            const totalBeats = ticks / ticksPerBeat;\r\n            const barNumber = Math.floor(totalBeats / beatsPerBar) + 1;\r\n            const beatWithinBar = Math.floor(totalBeats % beatsPerBar) + 1;\r\n            const semiquaverPosition = Math.floor((ticks % ticksPerBeat) / ticksPerSemiquaver) + 1;\r\n\r\n            return { bar: barNumber, beat: beatWithinBar, semiquaver: semiquaverPosition };\r\n        };\r\n\r\n        p.mousePressed = () => {\r\n            if(p.audioLoaded){\r\n                if (p.song.isPlaying()) {\r\n                    p.song.pause();\r\n                } else {\r\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\r\n                        p.reset();\r\n                        if (typeof window.dataLayer !== typeof undefined){\r\n                            window.dataLayer.push(\r\n                                { \r\n                                    'event': 'play-animation',\r\n                                    'animation': {\r\n                                        'title': document.title,\r\n                                        'location': window.location.href,\r\n                                        'action': 'replaying'\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\r\n                    p.canvas.addClass(\"fade-in\");\r\n                    p.song.play();\r\n                    if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\r\n                        window.dataLayer.push(\r\n                            { \r\n                                'event': 'play-animation',\r\n                                'animation': {\r\n                                    'title': document.title,\r\n                                    'location': window.location.href,\r\n                                    'action': 'start playing'\r\n                                }\r\n                            }\r\n                        );\r\n                        p.hasStarted = false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        p.creditsLogged = false;\r\n\r\n        p.logCredits = () => {\r\n            if (\r\n                !p.creditsLogged &&\r\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\r\n            ) {\r\n                p.creditsLogged = true;\r\n                    console.log(\r\n                    \"Music By: http://labcat.nz/\",\r\n                    \"\\n\",\r\n                    \"Animation By: https://github.com/LABCAT/\"\r\n                );\r\n                p.song.stop();\r\n            }\r\n        };\r\n\r\n        p.reset = () => {\r\n\r\n        }\r\n\r\n        p.updateCanvasDimensions = () => {\r\n            p.canvasWidth = window.innerWidth;\r\n            p.canvasHeight = window.innerHeight;\r\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\r\n        }\r\n\r\n        if (window.attachEvent) {\r\n            window.attachEvent(\r\n                'onresize',\r\n                function () {\r\n                    p.updateCanvasDimensions();\r\n                }\r\n            );\r\n        }\r\n        else if (window.addEventListener) {\r\n            window.addEventListener(\r\n                'resize',\r\n                function () {\r\n                    p.updateCanvasDimensions();\r\n                },\r\n                true\r\n            );\r\n        }\r\n        else {\r\n            //The browser does not support Javascript event binding\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        new p5(Sketch, sketchRef.current);\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={sketchRef}>\r\n            <PlayIcon />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default P5SketchWithAudio;\r\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}